openapi: 3.0.0
info:
  title: Romashka CRM. Управление балансом и смена тарифа
  description: API для управления балансом и смены тарифа абонентов оператора "Ромашка".
  contact:
    name: Romashka Support
    email: support@romashka.ru
  termsOfService: http://romashkacrm.ru/termsofservice
  license: 
    name: Romashka CRM License
    url: http://romashkacrm.ru/license
  version: 1.0.0
externalDocs:
  description: Постановка на разработку сервиса CRM
  url: https://docs.google.com/document/d/1lvqA4XzcEOlaUWi_d63comROuRbc8UG-dYa9QNscQCU/edit?tab=t.0
servers:
  - url: http://romashkacrm.ru
    description: Production server
tags:
  - name: subscriber
    description: Операции, связанные с абонентами
  - name: balance
    description: Операции, связанные с балансом абонента
  - name: tariff
    description: Операции, связанные с тарифом абонента
paths:
  /manager/subscriber/add:
    post:
      tags:
        - subscriber
      summary: Менеджер регистрирует нового абонента
      description: Возвращается информация о зарегистрированном абоненте
      operationId: save
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubInfo'
      responses:
        '201':
          description: Успешно добавлен абонент
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubInfo'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway'
      security: 
        - BasicAuthentication: []
  /manager/subscriber/{msisdn}: 
    get: 
      tags:
        - subscriber
      summary: Менеджер получает полную информацию об абоненте
      description: Менеджеру возвращается информация о ФИО абонента, паспортных данных, дате рождения номере телефона, тарифе, балансе, дате последнего списания и минутах.  
      operationId: getSubInfo
      parameters:
        - name: msisdn
          in: path
          required: true
          schema:
            type: string
            pattern: '^7\d{10}$'
            example: "79991234567"
      responses:
        '200':
          description: Полная информация об абоненте
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SubFullInfo'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway' 
      security: 
        - BasicAuthentication: []
    patch: 
      tags:
        - subscriber
      summary: Менеджер редактирует данные абонента
      description: Возвращается информация об обновленных данных абонента
      operationId: updateSubInfo
      parameters: 
        - name: msisdn
          in: path
          required: true
          schema:
            type: string
      requestBody: 
        description: Изменение данных абонента
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubInfo'
      responses: 
        '200':
          description: Информация об абоненте успешно обновлена
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SubInfoUpdated'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway' 
      security: 
        - BasicAuthentication: []
    delete: 
      tags:
        - subscriber
      summary: Менеджер удаляет абонента
      description: Возвращается информация об удаленном абоненте
      operationId: deleteSub
      parameters: 
        - name: msisdn
          in: path
          required: true
          schema:
            type: string
            pattern: '^7\d{10}$'
            example: "79991234567"
      responses: 
        '200': 
          description: Абонент успешно удален
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SubDeleted'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway'
      security: 
        - BasicAuthentication: [] 
  /subscriber/{msisdn}/balance:
    get:
      tags:
        - balance
      summary: Абонент получает информацию о балансе
      description: Абоненту возвращается информация о номере телефона, балансе, тарифе, ФИО, дате последнего списания и минутах, оставшихся на счету.
      operationId: getBalance
      parameters:
        - name: msisdn
          in: path
          required: true
          schema:
            type: string
            pattern: '^7\d{10}$'
            example: "79991234567"
      responses:
        '200':
          description: Успешно возвращен баланс абонента
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceInfo'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway'
      security: 
        - BearerAuthentication: []
    put:
      tags:
        - balance
      summary: Абонент пополняет баланс
      description: Позволяет абоненту пополнить свой баланс
      operationId: pay
      parameters:
        - name: msisdn
          in: path
          required: true
          schema:
            type: string
            pattern: '^7\d{10}$'
            example: "79991234567"
      requestBody:
        description: Пополнение баланса
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BalanceTopUp'
      responses:
        '200':
          description: Успешно пополнен баланс
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceChange'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway'
      security: 
        - BearerAuthentication: []
  /manager/subscriber/{msisdn}/tariff:
    get:
      tags:
        - tariff
      summary: Менеджер получает информацию о тарифе абонента
      description: Менеджеру возвращается информация о текущем тарифе абонента и доступные тарифы.
      operationId: getSubTariff
      parameters:
        - name: msisdn
          in: path
          required: true
          schema:
            type: string
            pattern: '^7\d{10}$'
            example: "79991234567"
      responses:
        '200':
          description: Текщий тариф и доступные тарифы
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TariffInfo'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway'
      security: 
        - BasicAuthentication: []
    put:
      tags:
        - tariff
      summary: Менеджер меняет тариф абонента
      description: Возвращается информация об обновленном тарифе абонента
      operationId: changeTariff
      parameters:
        - name: msisdn
          in: path
          required: true
          schema:
            type: string
            pattern: '^7\d{10}$'
            example: "79991234567"
      requestBody:
        description: Смена тарифа
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTariffInfo'
      responses:
        '201':
          description: Успешно обновлен тариф
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TariffChange'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway'
      security: 
        - BasicAuthentication: []
components:
  schemas:
    BalanceInfo:
      type: object
      properties:
        msisdn:
          type: string
          pattern: '^7\d{10}$'
          example: "79991234567"
        balance:
          type: number
          format: float
          example: 165.50
        tariff:
          type: string
          example: "Классический"
        fullName:
          type: string
          example: "Иванов Иван Иванович"
        lastChargeDate:
          type: string
          format: date
          example: "2025-04-20"
        minutes:
          type: integer
          example: 130
    SubInfo:
      type: object
      properties:
        fullName:
          type: string
          example: "Иванов Иван Иванович"
        passport:
          type: string
          example: "11040000007"
        dateOfBirth:
          type: string
          format: date
          example: "2002-07-30"
        msisdn:
          type: string
          pattern: '^7\d{10}$'
          example: "79991234567"
        tariff:
          type: string
          example: "Классический"
        balance:
          type: number
          format: float
          example: 100
    BalanceTopUp:
      type: object
      required:
        - amount
        - paymentMethod
      properties:
        amount:
          type: number
          format: float
          example: 500
        paymentMethod:
          type: string
          enum: [ cash, bank_card, sbp, promised_payment, autopayment ]
          example: bank_card
    BalanceChange:
      type: object
      properties:
        msisdn:
          type: string
          pattern: '^7\d{10}$'
          example: "79991234567"
        balance:
          type: number
          format: float
          example: 665.50
        amount:
          type: number
          format: float
          example: 500
        paymentMethod:
          type: string
          enum: [ cash, bank_card, sbp, promised_payment, autopayment ]
          example: bank_card
        tariff:
          type: string
          example: "Классический"
        fullName:
          type: string
          example: "Иванов Иван Иванович"
        lastChargeDate:
          type: string
          format: date
          example: "2025-04-20"
        minutes:
          type: integer
          example: 130
    TariffInfo:
      type: object
      properties:
        msisdn:
          type: string
          pattern: '^7\d{10}$'
          example: "79991234567"
        currentTariff:
          type: string
          example: "Классический"
        availableTariffs:
          type: array
          items:
            type: string
          example: [ "Классический", "Помесячный" ]
    NewTariffInfo:
      type: object
      properties:
        msisdn:
          type: string
          pattern: '^7\d{10}$'
          example: "79991234567"
        currentTariff:
          type: string
          example: "Классический"
        availableTariffs:
          type: array
          items:
            type: string
          example: [ "Классический", "Помесячный" ]
        newTariff:
          type: string
          example: "Помесячный"
    TariffChange:
      type: object
      properties:
        msisdn:
          type: string
          pattern: '^7\d{10}$'
          example: "79991234567"
        currentTariff:
          type: string
          example: "Помесячный"
        availableTariffs:
          type: array
          items:
            type: string
          example: [ "Классический", "Помесячный" ]
    SubDeleted: 
      type: object
      properties:
        msisdn:
          type: string
          pattern: '^7\d{10}$'
          example: "79991234567" 
        status: 
          type: string
          example: deleted
    SubInfoUpdated: 
      type: object
      properties:
        fullName:
          type: string
          example: "Сергеев Иван Сергеевич"
        passport:
          type: string
          example: "11040000037"
        dateOfBirth:
          type: string
          format: date
          example: "2002-07-30"
        msisdn:
          type: string
          pattern: '^7\d{10}$'
          example: "79991234567"
        tariff:
          type: string
          example: "Классический"
        balance:
          type: number
          format: float
          example: 100 
    SubFullInfo: 
      type: object
      properties:
        fullName:
          type: string
          example: "Сергеев Иван Сергеевич"
        passport:
          type: string
          example: "11040000037"
        dateOfBirth:
          type: string
          format: date
          example: "2002-07-30"
        msisdn:
          type: string
          pattern: '^7\d{10}$'
          example: "79991234567"
        tariff:
          type: string
          example: "Классический"
        balance:
          type: number
          format: float
          example: 100
        lastChargeDate:
          type: string
          format: date
          example: "2025-04-20"
        minutes:
          type: integer
          example: 130
  responses:
    400BadRequest:
      description: Некорректный запрос
      content: 
        application/json:
          schema: 
            type: object
            properties: 
              explaination: 
                type: string
                example: Cервер обнаружил в запросе синтаксическую ошибку
              errorCode: 
                type: string
                example: 40000 - Bad request
    401Unauthorized:
      description: Не авторизован
      content: 
        application/json:
          schema: 
            type: object
            properties: 
              explaination: 
                type: string
                example: Для доступа к запрашиваемому ресурсу требуется аутентификация
              errorCode: 
                type: string
                example: 40100 - Unauthorized
    403Forbidden:
      description: Не хватает прав
      content: 
        application/json:
          schema: 
            type: object
            properties: 
              explaination: 
                type: string
                example: Клиент не уполномочен совершать операции с запрошенным ресурсом
              errorCode: 
                type: string
                example: 40300 - Forbidden
    404NotFound:
      description: Страница не найдена
      content: 
        application/json:
          schema: 
            type: object
            properties: 
              explaination: 
                type: string
                example: По данному адресу не существует страницы
              errorCode: 
                type: string
                example: 40400 - Not found
    500InternalServerError:
      description: Ошибка сервера
      content: 
        application/json:
          schema: 
            type: object
            properties: 
              explaination: 
                type: string
                example: Сервер столкнулся с ошибкой и не смог завершить запрос
              errorCode: 
                type: string
                example: 50000 - Internal error
    502BadGateway:
      description: Bad Gateway
      content: 
        application/json:
          schema: 
            type: object
            properties: 
              explaination: 
                type: string
                example: Сервер получил недействительное ответное сообщение от вышестоящего сервера 
              errorCode: 
                type: string
                example: 502 - Bad Gateway
  securitySchemes:
    BasicAuthentication:
      type: http
      scheme: basic
    BearerAuthentication:
      type: http
      scheme: bearer